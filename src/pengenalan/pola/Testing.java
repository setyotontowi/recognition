 /*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pengenalan.pola;

import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FilenameFilter;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.table.DefaultTableModel;
import org.opencv.core.CvType;
import org.opencv.core.Mat;
import org.opencv.imgcodecs.Imgcodecs;
import org.opencv.imgproc.Imgproc;
import org.opencv.ml.ANN_MLP;

/**
 *
 * @author Tontowi
 * @params
 * classifier = list files in folder
 * descriptors = Mat data that will be trained
 */
public class Testing extends javax.swing.JFrame {

    /**
     * Creates new form Testing
     */
    
    ArrayList<String> classifier = new ArrayList();
    
    JFileChooser file;
    String dir;
    Mat descriptors;
    int format;
    
    public Testing() {
        initComponents();
        Training tr = new Training();
        ArrayList<String >listtarget = new ArrayList<>();
        for(int i=0; i<tr.namatarget.size(); i++){
            listtarget.add(tr.namatarget.get(i));
        }
        String [] listtargetobject = listtarget.toArray(new String[listtarget.size()]);
//        System.out.println(Training.pola[0][0]);
        option.setModel(new javax.swing.DefaultComboBoxModel<>(listtargetobject));
        //tr.temptarget.get(0) = 0,0,1  
        //temptarget = 001, 010, 011, 100, 101...
    }
    
    public int binaryToInteger(ArrayList<Double> binary){
        Collections.reverse(binary);
        int sigma = 0;
        for(int i=0; i<binary.size(); i++){
            if(binary.get(i)==0){continue;}
            sigma += Math.pow(2, i);
        }
        return sigma-1;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        inputfolder = new javax.swing.JButton();
        datasrc = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        inputdata = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        gambar = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        option = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        inputann = new javax.swing.JButton();
        useprevious = new javax.swing.JCheckBox();
        annsrc = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        start = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        knownastext = new javax.swing.JLabel();
        knownas = new javax.swing.JTextField();
        status = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        content = new javax.swing.JTable();

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        inputfolder.setText("Input Folder");
        inputfolder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputfolderActionPerformed(evt);
            }
        });

        datasrc.setEditable(false);
        datasrc.setText("src");

        jLabel2.setText("Input Data");

        inputdata.setText("Input Citra");
        inputdata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputdataActionPerformed(evt);
            }
        });

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel6.setPreferredSize(new java.awt.Dimension(103, 103));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(gambar)
                .addGap(0, 99, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(gambar)
                .addGap(0, 105, Short.MAX_VALUE))
        );

        jLabel1.setText("Gambar");

        jLabel4.setText("Rambu Lalu Lintas");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(datasrc)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(inputfolder)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                        .addComponent(inputdata, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(option, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputfolder)
                    .addComponent(inputdata))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(datasrc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addGap(8, 8, 8)
                        .addComponent(option, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(70, 70, 70))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        inputann.setText("Input ANN");

        useprevious.setText("Use Previous Training");
        useprevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usepreviousActionPerformed(evt);
            }
        });

        annsrc.setEditable(false);
        annsrc.setText("src");

        jLabel3.setText("Input ANN");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(inputann)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(useprevious))
                    .addComponent(annsrc, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE))
                .addGap(9, 9, 9))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputann)
                    .addComponent(useprevious))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(annsrc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        start.setText("Start Testing");
        start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startActionPerformed(evt);
            }
        });

        jLabel5.setText("Hasil Testing (Citra)");

        knownastext.setText("Dikenali Sebagai");

        knownas.setEditable(false);

        status.setText("Status");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(knownastext)
                        .addGap(18, 18, 18)
                        .addComponent(knownas))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(status))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(start, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(knownastext)
                            .addComponent(knownas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(status))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGap(56, 56, 56)
                                .addComponent(start)))
                        .addGap(16, 16, 16)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Testing Properties", jPanel3);

        content.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Data", "Predict", "Class", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(content);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Data List", jPanel5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inputfolderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputfolderActionPerformed
        // TODO add your handling code here:
        file = new JFileChooser();
        file.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        file.showOpenDialog(this);
        dir = file.getSelectedFile().toString();
        
        //List Folder
        File files = new File(dir); 
        String[] directories = files.list(new FilenameFilter(){
            public boolean accept(File current, String name){
                return new File(current, name).isFile();
            }  
        });
        classifier.clear();
        //List Files in Folder
        for (String directorie : directories) {
            classifier.add(dir+"\\" + directorie);
        }
        
//        System.out.println(classifier);
        datasrc.setText(dir);
        format = 1;
    }//GEN-LAST:event_inputfolderActionPerformed

    private void inputdataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputdataActionPerformed
        // TODO add your handling code here:
        file = new JFileChooser();
        file.showOpenDialog(this);
        dir = file.getSelectedFile().toString();
        
        datasrc.setText(dir);
        
        Mat img = Imgcodecs.imread(dir);
        Imgproc.cvtColor(img, img, Imgproc.COLOR_BGR2RGB);
        Mat mark = new Mat(img.size(), CvType.CV_8UC1);
        img.convertTo(mark, CvType.CV_8UC1);
        byte[] set1 = new byte[mark.rows()*mark.cols()*(int)mark.elemSize()];
        mark.get(0,0, set1);
        BufferedImage set2 = new BufferedImage(mark.cols(), mark.rows(), BufferedImage.TYPE_3BYTE_BGR);
        set2.getRaster().setDataElements(0,0,mark.cols(),mark.rows(), set1);
        
        ImageIcon ims;
        ims = new ImageIcon(set2.getScaledInstance(100,100,0));
        gambar.setIcon(ims);
        classifier.clear();
        classifier.add(dir);
        format=2;
    }//GEN-LAST:event_inputdataActionPerformed

    private void startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startActionPerformed
        // TODO add your handling code here:
        
        DefaultTableModel model = (DefaultTableModel) content.getModel();
        long startTime = System.currentTimeMillis();
        
        if(useprevious.isSelected()){
            Training training = new Training();
            int c = Training.chooser;
//            c=2;
            if(Training.ann==null){
                System.out.println("no ANN");
            }
            //HISTOGRAM OF ORIENTED GRADIENT
            if(c==1){
                int sum=0;
                for(int i=0; i<classifier.size();i++){
                    String tempdir = classifier.get(i);
                    ArrayList<Double> predict = new ArrayList();
                    Mat output = new Mat();
                    
                    int tcs = training.cs;
                    int tbs = training.bs;
                    int tws = training.ws;
                    int tbst = training.bst;
                    int tbin = training.bin;
                    
                    descriptors=training.computeHOG(tempdir, classifier, 0, tcs, tbs, tws, tbst, tbin);
                    
                    Training.ann.predict(descriptors, output, 0);
                    double [][] getoutput = new double[output.cols()][1];
                    for(int j=0; j<output.cols(); j++){
                        getoutput[j] = output.get(0, j);
                        if(getoutput[j][0]<0.5){
                            getoutput[j][0] = 0;
                        }
                        else if(getoutput[j][0]>=0.5){
                            getoutput[j][0] = 1;
                        }
                        predict.add(getoutput[j][0]);
                    }
                    int intpredict = binaryToInteger(predict);
                    Collections.reverse(predict);
                    
                    String pola = new String();
                    String tf = new String();
                    
                    //Mencocokkan intpredict dengan pola[0][j] lalu menampilkan nama kelas tersebut
                    for(int j=0; j<Training.pola[0].length; j++){
                        if(intpredict == Integer.valueOf(Training.pola[0][j])){
                            knownas.setText(Training.pola[1][j]);
                            pola = Training.pola[1][j];
                        }
                    }
                    if(pola.equals(option.getSelectedItem().toString())){
                        tf = "TRUE";
                        sum=sum+1;
                    }
                    else{
                        tf = "";
                    }
                    status.setText(predict.toString());
                    model.addRow(new Object[]{tempdir, Arrays.toString(predict.toArray()), pola, tf });
                    
                }
                if(format==1){
                    double percent = ((double)sum/ (double) classifier.size())*100;
                    status.setText("Presentase= "+percent+"% ");
                    knownastext.setText("Benar/Total Data ");
                    knownas.setText(sum+"/"+classifier.size());
                }
            }
            //PRINCIPAL COMPONENT ANALYSIS
            else if(c == 2){
                int sum=0;
                System.out.println("classifier size"+classifier.size());
                for(int i=0; i<classifier.size();i++){
                    String tempdir = classifier.get(i);
                    ArrayList<Double> predict = new ArrayList();
                    //predict seperti apa dia? [010]?
                    Mat output = new Mat();
                    
                    
                    descriptors=training.computePCA(tempdir, classifier, 0);
                    
                    Training.ann.predict(descriptors, output, 0);
                    double [][] getoutput = new double[output.cols()][1];
                    for(int j=0; j<output.cols(); j++){
                        getoutput[j] = output.get(0, j);
                        if(getoutput[j][0]<0.5){
                            getoutput[j][0] = 0;
                        }
                        else if(getoutput[j][0]>=0.5){
                            getoutput[j][0] = 1;
                        }
                        predict.add(getoutput[j][0]);
                    }
                    int intpredict = binaryToInteger(predict);
                    Collections.reverse(predict);
                    
                    String pola = new String();
                    String tf = new String();
                    
                    //Mencocokkan intpredict dengan pola[0][j] lalu menampilkan nama kelas tersebut
                    for(int j=0; j<Training.pola[0].length; j++){
                        if(intpredict == Integer.valueOf(Training.pola[0][j])){
                            knownas.setText(Training.pola[1][j]);
                            pola = Training.pola[1][j];
                        }
                    }
                    if(pola.equals(option.getSelectedItem().toString())){
                        tf = "TRUE";
                        sum=sum+1;
                    }
                    else{
                        tf = "";
                    }
                    status.setText(predict.toString());
                    model.addRow(new Object[]{tempdir, Arrays.toString(predict.toArray()), pola, tf });
                }
                if(format==1){
                    double percent = ((double)sum/ (double) classifier.size())*100;
                    status.setText("Presentase= "+percent+"% ");
                    knownastext.setText("Benar/Total Data ");
                    knownas.setText(sum+"/"+classifier.size());
                }
            }
            
//            System.out.println("finish");
        long endTime = System.currentTimeMillis();
        System.out.println("Process Time = "+(endTime-startTime)+"ms");
        }
    }//GEN-LAST:event_startActionPerformed

    private void usepreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usepreviousActionPerformed
        // TODO add your handling code here:
        annsrc.setText("Use Previous Neural Network");
    }//GEN-LAST:event_usepreviousActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Testing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Testing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Testing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Testing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Testing().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField annsrc;
    private javax.swing.JTable content;
    private javax.swing.JTextField datasrc;
    private javax.swing.JLabel gambar;
    private javax.swing.JButton inputann;
    private javax.swing.JButton inputdata;
    private javax.swing.JButton inputfolder;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField knownas;
    private javax.swing.JLabel knownastext;
    private javax.swing.JComboBox<String> option;
    private javax.swing.JButton start;
    private javax.swing.JLabel status;
    private javax.swing.JCheckBox useprevious;
    // End of variables declaration//GEN-END:variables
}
